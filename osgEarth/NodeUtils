/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2010 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_NODE_UTILS_H
#define OSGEARTH_NODE_UTILS_H 1

#include <osgEarth/Common>
#include <osg/ClusterCullingCallback>

namespace osgEarth
{
    /**
     * Given a geocentric subgraph and a center point, generate a suitable
     * cluster culling callback.
     */
    struct OSGEARTH_EXPORT ClusterCullerFactory
    {
        static osg::ClusterCullingCallback* create( 
            osg::Node*        node, 
            const osg::Vec3d& centerGeocentric );
    };

    /**
     * Visitor that looks for empty group nodes and removes them from the 
     * scene graph. (Note, if the entry node is an empty group, it will
     * not be affected.)
     */
    class OSGEARTH_EXPORT RemoveEmptyGroupsVisitor : public osg::NodeVisitor
    {
    public:
        static void run( osg::Node* entry ) {
            if ( entry ) {
                RemoveEmptyGroupsVisitor v;
                entry->accept( v );
            }
        }

    public:
        RemoveEmptyGroupsVisitor();
        void apply( osg::Group& group ); //override
    };
}

#endif // OSGEARTH_CACHING_H
